services:
    connection:
        class: Wasp\Database\Connection
        arguments: 
            - "@connections"
            - "@validator"
    connections:
        class: Wasp\Database\ConnectionCollection
        calls:
            - [setDI, ["@service_container"]]
    connection.validator:
        class: Wasp\Database\ConnectionValidator
        scope: prototype
    controller.resolver:
        class: Wasp\Controller\ControllerResolver
        calls:
            - [setDI, ["@service_container"]]
    console:
        class: Wasp\Console\ConsoleApplication
        lazy: true
        calls:
            - [setDI, ["@service_container"]]
    command.loader:
        class: Wasp\Console\CommandLoader
        lazy: true
        arguments:
            - "@console"
    event.dispatch:
        class: Symfony\Component\EventDispatcher\EventDispatcher
        lazy: true
        arguments:
            - "@service_container"
    event.register:
        class: Wasp\Events\EventRegister
        lazy: true
        arguments:
            - "@event.dispatch"
    database:
        class: Wasp\Database\Database
        arguments:
            - "@connection"
    finder:
        class: Symfony\Component\Finder\Finder
        lazy: true
        scope: prototype
    fixtures:
        class: Wasp\Database\FixtureManager
        lazy: true
        arguments:
            - "@connection"
    fs:
        class: Symfony\Component\Filesystem\Filesystem
        lazy: true
    kernel:
        class: Wasp\Application\AppKernel
        arguments:
            - "dev"
            - true
    kernel.http:
        class: Symfony\Component\HttpKernel\HttpKernel
        arguments:
            - "@kernel.dispatcher"
            - "@controller.resolver"
    kernel.dispatcher:
        class: Symfony\Component\EventDispatcher\EventDispatcher
        calls:
            - [addSubscriber, ["@router.listener"]]
    paginator:
        class: Wasp\Database\Paginator
        lazy: true
        arguments:
            - "@database"
            - "@request"
    profile:
        class: Wasp\Application\Profile
        arguments:
            - "@fs"
    response.api:
        class: Symfony\Component\HttpFoundation\Response
        lazy: true
        scope: prototype
    response:
        class: Wasp\Controller\Response
        lazy: true
        calls:
           - [setDI, ["@service_container"]]
    response.json:
        class: Symfony\Component\HttpFoundation\JsonResponse
        lazy: true
        scope: prototype
    request:
        class: Wasp\Routing\Request
        lazy: true
        arguments: 
            - "@session"
    request.context:
        class: Symfony\Component\Routing\RequestContext
    request.stack:
        class: Symfony\Component\HttpFoundation\RequestStack
    route.collection:
        class: Symfony\Component\Routing\RouteCollection
    route:
        class: Wasp\Routing\Route
        arguments:
            - "@route.collection"
    router.listener:
        class: Symfony\Component\HttpKernel\EventListener\RouterListener
        arguments:
            - "@url.matcher"
            - "@request.context"
            - NULL
            - "@request.stack"
    schema:
        class: Wasp\Database\Schema
        lazy: true
        arguments:
            - "@connection"
    session:
        class: Symfony\Component\HttpFoundation\Session\Session
        lazy: true
    serializer:
        class: Wasp\Utils\Serializer
        lazy: true
    profile:
        class: Wasp\Application\Profile
        arguments:
            - "@fs"
    template:
        class: Wasp\Templating\Template
        lazy: true
        calls:
            - [setDI, ["@service_container"]]
    twigengine:
        class: Wasp\Templating\Engines\TwigEngine
        lazy: true
        arguments:
            - "@template"
            - "@fs"
            - "@service_container"
    url:
        class: Wasp\Routing\URL
        lazy: true
        arguments:
            - "@request"
            - "@route.collection"
    url.matcher:
        class: Symfony\Component\Routing\Matcher\UrlMatcher
        arguments:
            - "@route.collection"
            - "@request.context"
    validator:
        class: Wasp\Entity\Validator
        lazy: true
